const { AnnouncementModel } = require('./models/models.js');

const getAnnouncementOptions = async (userId) => {
   try {
      const userAnnouncements = await AnnouncementModel.find({ sellerId: userId });

      if (userAnnouncements.length === 0) {
         return; // –Ø–∫—â–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ–º–∞—î –æ–≥–æ–ª–æ—à–µ–Ω—å, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
      }

      return;
   } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –æ–≥–æ–ª–æ—à–µ–Ω—å –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö:', error);
      return; // –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏
   }
};


module.exports = {
   getAnnouncementOptions,

   SellerOptions: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: '–ú–æ—ó –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è', callback_data: 'my_announcement' }, { text: '–°—Ç–∞—Ç—É—Å –ø—ñ–¥–ø–∏—Å–∫–∏', callback_data: 'subscription_status' },],
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'main_menu' }],
         ]
      })
   },

   AnnouncementOptions: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: '–û–≥–æ–ª–æ—à–µ–Ω–Ω—è 1', callback_data: 'announcement_0' }],
            [{ text: '–û–≥–æ–ª–æ—à–µ–Ω–Ω—è 2', callback_data: 'announcement_1' }],
            [{ text: '–û–≥–æ–ª–æ—à–µ–Ω–Ω—è 3', callback_data: 'announcement_2' }],
         ]
      })
   },

   BackOption: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      })
   },

   // ------------------------------------------- NAVIGATION --------------------------------------------------------------------

   InstituteOptions_1: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: 'IKTA', callback_data: 'IKTA_1' }],
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      })
   },

   InstituteOptions_2: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: 'IKTA', callback_data: 'IKTA_2' }],
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      })
   },

   InstituteOptions_3: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      })
   },



   IKTA_1_Speciality: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: '–ö–æ–º–ø. —ñ–Ω–∂–µ–Ω–µ—Ä—ñ—è', callback_data: 'KI_1' }],
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      }),
   },

   IKTA_2_Speciality: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: '–ö–æ–º–ø`—é—Ç–µ—Ä–Ω–∞ —ñ–Ω–∂–µ–Ω–µ—Ä—ñ—è', callback_data: 'KI_2' }],
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      }),
   },



   KI_1_Options: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: '–í–∏—à–º–∞—Ç', callback_data: 'KI_1_1' }, { text: '–û–û–§–ö', callback_data: 'KI_1_2' }, { text: '–§—ñ–∑–∏–∫–∞', callback_data: 'KI_1_3' }],
            [{ text: '–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è', callback_data: 'KI_1_4' }, { text: '–î–∏—Å–∫—Ä–µ—Ç–Ω–∞ –º–∞—Ç.', callback_data: 'KI_1_5' }, { text: '–Ü—Å—Ç–æ—Ä—ñ—è', callback_data: 'KI_1_6' }],
            [{ text: '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞', callback_data: 'KI_1_7' }],
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      })
   },
   KI_2_Options: {
      reply_markup: JSON.stringify({
         inline_keyboard: [
            [{ text: '–ö–æ–º–ø. –ª–æ–≥—ñ–∫–∞', callback_data: 'KI_2_1' }, { text: '–ö–æ–º–ø. –µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞', callback_data: 'KI_2_2' },],
            [{ text: '–ö–æ–º–ø.—Å—Ö–µ–º–æ—Ç–µ—Ö–Ω—ñ–∫–∞', callback_data: 'KI_2_3' }, { text: '–°–∏—Å—Ç. –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è', callback_data: 'KI_2_4' },],
            [{ text: '–ê–ú–û', callback_data: 'KI_2_5' }],
            [{ text: 'üîô–ù–∞–∑–∞–¥', callback_data: 'back' }],
         ]
      })
   },
}